#define BLYNK_PRINT Serial
#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>
#include <SPI.h>
#include <Ethernet.h>
#include <BH1750FVI.h>                                 //ประกาศ header file 
#include "Timer.h"                                     //ประกาศ header file 
BlynkTimer timer;
BH1750FVI LightSensor(BH1750FVI::k_DevModeContLowRes); // สร้างออปเจกเซนเซอร์ BH1750
Timer delayT;                                          //ประกาศตัวแปร ของ Timer ชื่อ delayT
#define showLED D6                                     //ประกาศตัวแปร ชื่อ showLED ให้เป็นขาที่ 6 
#define sensorMovement D0                              //ประกาศตัวแปร ชื่อ sensorMovement ให้เป็นขาที่ 0 
#define dir1PinA D3                                    //
#define dir2PinA D4                                    //
int cost_LED = 400 ;                                   //ประกาศตัวแปรชื่อว่า cost_LED กำหนดให้มีค่าเป็น 400
int y = 0;                                             //ประกาศตัวแปรชื่อว่า y กำหนดให้มีค่าเป็น 0
int i = 0;
int fixbright = 0 ;
int calY = 0;
int pinValue = 0;
int statusBtn = 0;
//char auth[] = "a7BFiu1JSDwcjgTK1Js3PmAJ4SolHV4z";
char auth[] = "Us4dd87sdC5WvZ51fLHO2-cr_Jh55qgP";
//char auth[] = "9ZiKhDn9F_fHOGu59ZUPd-oXGav5fvGH";
char ssid[] = "ญ";
char pass[] = "123456788";
WidgetLED led(V5);

BLYNK_WRITE(V9)
{
  pinValue = param.asInt(); // assigning incoming value from pin V1 to a variable
  Serial.print("V9 Slider value is: ");
  Serial.println(pinValue);
  digitalRead(V9);
}

void setup() {
  pinMode(dir1PinA, OUTPUT);
  pinMode(dir2PinA, OUTPUT);
  pinMode(showLED, OUTPUT);
  pinMode(sensorMovement, INPUT);             //กำหนดขา sensorMovement ให้เป็นขาเข้า
  Serial.begin(9600);                         //กำหนดบอร์ดเรท
  LightSensor.begin();                        //การทำงานของเซ็นเซอร์
  digitalWrite(dir1PinA, LOW);
  digitalWrite(dir2PinA, HIGH);
  Blynk.begin(auth, ssid, pass);
  timer.setInterval(1000L, myTimerEvent);
}

void chkStatus(int y , int value) {
  if (value == HIGH) //ถ้าเซ็นเซอร์มีค่าเท่ากับ 1 ?
  { //เริ่มการทำงานif
    Serial.println(" พบสิ่งเคลื่อนไหว "); //แสดงข้อความ
  } //จบการทำงาน if
  if (value == LOW) //ถ้าเซ็นเซอร์เท่ากับ 0 ?
  { //เริ่มการทำงานif
    Serial.println(" ไม่พบสิ่งเคลื่อนไหว ");  //แสดงข้อความ
  } //จบการทำงานif
}

void chkSensor() {
  uint16_t lux = LightSensor.GetLightIntensity();  //สร้างตัวแปรเพื่อนเก็บค่าของเซ็นเซอร์
  y = lux ;
  //y = map(lux, 1, 54612, 1, 800); //map ขนาดของค่าที่ได้ออกมา ให้เริ่มต้นที่ 1 ไปถึง 400
}

void up() {
  uint16_t lux = LightSensor.GetLightIntensity();  //สร้างตัวแปรเพื่อนเก็บค่าของเซ็นเซอร์
  y = lux ;
  //y = map(lux, 1, 54612, 1, 800); //map ขนาดของค่าที่ได้ออกมา ให้เริ่มต้นที่ 1 ไปถึง 400
  if ( y > 400 ) {
    digitalWrite(showLED, LOW);
  }

  if ( digitalRead(sensorMovement) > 0 && fixbright == 0) {
    Serial.println (digitalRead(sensorMovement));
    fixbright = 1 ;
    statusBtn = 1 ;
    pinValue = 1 ;
  }

  if (pinValue == 0 && statusBtn == 1 ) {
    Serial.println (digitalRead(sensorMovement)) ;
    for ( i = calY ; i >= 0 ; i = i - 1  ) {
      analogWrite(showLED , i) ;
      Serial.println(i);
      delay(10);
    }
    fixbright = 0 ;
    statusBtn = 0 ;
  }
}

void myTimerEvent() {
  Blynk.virtualWrite(V0, y );
  Blynk.virtualWrite(V1, calY );
  Blynk.virtualWrite(V9, pinValue);
  Blynk.virtualWrite(V18, i );
  if (pinValue == 1) {
    led.on();
  } else {
    led.off();
  }
}

void loop() {
  up();
  calY = 400 - y ;
  if ( fixbright == 1 ) {
    analogWrite(showLED , calY) ;
    Serial.println(calY);
    Serial.println(y);
  }
  Blynk.run();
  timer.run(); // Initiates BlynkTimer
}